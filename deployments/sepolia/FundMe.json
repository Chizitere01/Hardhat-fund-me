{
  "address": "0xccc3D3f8BF85737cab48fbDeB2468A05CDce6809",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0533477852f18c14042e792dae7bb1991df2b57a1315c30046034d8b19354099",
  "receipt": {
    "to": null,
    "from": "0xed61c43C6a7D4cE30D8Abf345520E185FCfA75Eb",
    "contractAddress": "0xccc3D3f8BF85737cab48fbDeB2468A05CDce6809",
    "transactionIndex": 10,
    "gasUsed": "849874",
    "logsBloom": "0x
    "blockHash": "0xc12dad2dbc0ba3184a2ccfa78e1a3fb1fcd6d1f914d3e24e03a7553b9fca857c",
    "transactionHash": "0x0533477852f18c14042e792dae7bb1991df2b57a1315c30046034d8b19354099",
    "logs": [],
    "blockNumber": 3869514,
    "cumulativeGasUsed": "4385608",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "7545c6cc4f92266f948bddfbb017fce6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Get funds from users\\n// Withdraw funds\\n//Set a minimum funding value in USD\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n// \\\"constant\\\" keyword and \\\"immutable\\\" keyword help to reduce gas\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    // constructor function is the function that automatically gets called when we deploy our contract\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        // Want to be able to set a minimum fund amount in USD\\n        //1. how do we send ETh to this contract?\\n        //Payable keywird is added to the function to make it fir to transact funds\\n\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough\\\"\\n        ); // 1e18 == 1*10 **18 == 1000000000000000000\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        //msg.value is going to have 18 decimal places\\n        // require keyword is a checker, it says: is msg.value greater than 1? if not it will revert and send the red message\\n        // What is reverting?\\n        // Undo any action before, and send remaining gas back\\n    }\\n\\n    // the code in the comment below is used to get the get the version of interfaces\\n    // function getVersion() public view returns (uint256) {\\n    //     // ETH/USD price feed address of Sepolia Network.\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //         0x694AA1769357215DE4FAC081bf1f309aDC325306\\n    //     );\\n    //     return priceFeed.version();\\n    // }\\n\\n    function withdraw() public {\\n        //for loop\\n        //[1, 2, 3, 4]\\n        /* starting index, ending index, step amount*/\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            //code\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0); // this is to reset the array\\n        /*\\n        now to actually withdraw the funds\\n        //transfer,\\n        //msg.sender = address\\n        //payable(msg.sender) = payable address\\n        payable(msg.sender).transfer(address(this).balance);\\n\\n        //send\\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);  \\n        require(sendSuccess, \\\"Send failed\\\"); */\\n\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        //require(msg.sender == i_owner, \\\"Sender is not Owner!\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        } // this also saves gas\\n        _;\\n    }\\n\\n    // what if someone sends this contract ETH without calling the fund function?\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x174c7399c0a73f3e75158b86303463498b9e9a1703088630a6edc6ad0070dd7f\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // we are going to need two things\\n        // the ABI and\\n        // the address 0x447Fd5eC2D383091C22B8549cb231a3bAD6d3fAf\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x447Fd5eC2D383091C22B8549cb231a3bAD6d3fAf\\n        // );\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        return uint256(price * 1e10); // 1**10 == 10000000000\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x5e643edddc48c132d50f15f8fee6089b84b74da82d8c8f106d6c8f5237edde30\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f59380380610f5983398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610dfb61015e60003960006104ec0152610dfb6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610733565b61049f565b6040516100d89190610779565b60405180910390f35b3480156100ed57600080fd5b506100f66104b7565b6040516101039190610779565b60405180910390f35b34801561011857600080fd5b506101216104c4565b60405161012e91906107f3565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566104ea565b604051610163919061081d565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610864565b61050e565b6040516101a0919061081d565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461054d90919063ffffffff16565b1015610229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610220906108ee565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db919061093d565b92505081905550565b60005b60008054905081101561038f57600080828154811061030957610308610993565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610387906109c2565b9150506102e7565b50600067ffffffffffffffff8111156103ab576103aa610a0b565b5b6040519080825280602002602001820160405280156103d95781602001602082028036833780820191505090505b50600090805190602001906103ef929190610629565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161041690610a6b565b60006040518083038185875af1925050503d8060008114610453576040519150601f19603f3d011682016040523d82523d6000602084013e610458565b606091505b505090508061049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390610acc565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061051e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061055983610589565b90506000670de0b6b3a764000085836105729190610aec565b61057c9190610b75565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105d257600080fd5b505afa1580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060a9190610c33565b5050509150506402540be400816106219190610cae565b915050919050565b8280548282559060005260206000209081019282156106a2579160200282015b828111156106a15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610649565b5b5090506106af91906106b3565b5090565b5b808211156106cc5760008160009055506001016106b4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610700826106d5565b9050919050565b610710816106f5565b811461071b57600080fd5b50565b60008135905061072d81610707565b92915050565b600060208284031215610749576107486106d0565b5b60006107578482850161071e565b91505092915050565b6000819050919050565b61077381610760565b82525050565b600060208201905061078e600083018461076a565b92915050565b6000819050919050565b60006107b96107b46107af846106d5565b610794565b6106d5565b9050919050565b60006107cb8261079e565b9050919050565b60006107dd826107c0565b9050919050565b6107ed816107d2565b82525050565b600060208201905061080860008301846107e4565b92915050565b610817816106f5565b82525050565b6000602082019050610832600083018461080e565b92915050565b61084181610760565b811461084c57600080fd5b50565b60008135905061085e81610838565b92915050565b60006020828403121561087a576108796106d0565b5b60006108888482850161084f565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b60006108d8601283610891565b91506108e3826108a2565b602082019050919050565b60006020820190508181036000830152610907816108cb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061094882610760565b915061095383610760565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109885761098761090e565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006109cd82610760565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a00576109ff61090e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a55600083610a3a565b9150610a6082610a45565b600082019050919050565b6000610a7682610a48565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ab6600b83610891565b9150610ac182610a80565b602082019050919050565b60006020820190508181036000830152610ae581610aa9565b9050919050565b6000610af782610760565b9150610b0283610760565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b3b57610b3a61090e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b8082610760565b9150610b8b83610760565b925082610b9b57610b9a610b46565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bc581610ba6565b8114610bd057600080fd5b50565b600081519050610be281610bbc565b92915050565b6000819050919050565b610bfb81610be8565b8114610c0657600080fd5b50565b600081519050610c1881610bf2565b92915050565b600081519050610c2d81610838565b92915050565b600080600080600060a08688031215610c4f57610c4e6106d0565b5b6000610c5d88828901610bd3565b9550506020610c6e88828901610c09565b9450506040610c7f88828901610c1e565b9350506060610c9088828901610c1e565b9250506080610ca188828901610bd3565b9150509295509295909350565b6000610cb982610be8565b9150610cc483610be8565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d0357610d0261090e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d4057610d3f61090e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d7d57610d7c61090e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dba57610db961090e565b5b82820290509291505056fea26469706673582212201e43ab842e2d3a1471138152d500850f8704c803fe12172c221c4acca413637764736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610733565b61049f565b6040516100d89190610779565b60405180910390f35b3480156100ed57600080fd5b506100f66104b7565b6040516101039190610779565b60405180910390f35b34801561011857600080fd5b506101216104c4565b60405161012e91906107f3565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566104ea565b604051610163919061081d565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610864565b61050e565b6040516101a0919061081d565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461054d90919063ffffffff16565b1015610229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610220906108ee565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db919061093d565b92505081905550565b60005b60008054905081101561038f57600080828154811061030957610308610993565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610387906109c2565b9150506102e7565b50600067ffffffffffffffff8111156103ab576103aa610a0b565b5b6040519080825280602002602001820160405280156103d95781602001602082028036833780820191505090505b50600090805190602001906103ef929190610629565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161041690610a6b565b60006040518083038185875af1925050503d8060008114610453576040519150601f19603f3d011682016040523d82523d6000602084013e610458565b606091505b505090508061049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390610acc565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061051e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061055983610589565b90506000670de0b6b3a764000085836105729190610aec565b61057c9190610b75565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105d257600080fd5b505afa1580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060a9190610c33565b5050509150506402540be400816106219190610cae565b915050919050565b8280548282559060005260206000209081019282156106a2579160200282015b828111156106a15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610649565b5b5090506106af91906106b3565b5090565b5b808211156106cc5760008160009055506001016106b4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610700826106d5565b9050919050565b610710816106f5565b811461071b57600080fd5b50565b60008135905061072d81610707565b92915050565b600060208284031215610749576107486106d0565b5b60006107578482850161071e565b91505092915050565b6000819050919050565b61077381610760565b82525050565b600060208201905061078e600083018461076a565b92915050565b6000819050919050565b60006107b96107b46107af846106d5565b610794565b6106d5565b9050919050565b60006107cb8261079e565b9050919050565b60006107dd826107c0565b9050919050565b6107ed816107d2565b82525050565b600060208201905061080860008301846107e4565b92915050565b610817816106f5565b82525050565b6000602082019050610832600083018461080e565b92915050565b61084181610760565b811461084c57600080fd5b50565b60008135905061085e81610838565b92915050565b60006020828403121561087a576108796106d0565b5b60006108888482850161084f565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b60006108d8601283610891565b91506108e3826108a2565b602082019050919050565b60006020820190508181036000830152610907816108cb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061094882610760565b915061095383610760565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109885761098761090e565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006109cd82610760565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a00576109ff61090e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a55600083610a3a565b9150610a6082610a45565b600082019050919050565b6000610a7682610a48565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ab6600b83610891565b9150610ac182610a80565b602082019050919050565b60006020820190508181036000830152610ae581610aa9565b9050919050565b6000610af782610760565b9150610b0283610760565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b3b57610b3a61090e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b8082610760565b9150610b8b83610760565b925082610b9b57610b9a610b46565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bc581610ba6565b8114610bd057600080fd5b50565b600081519050610be281610bbc565b92915050565b6000819050919050565b610bfb81610be8565b8114610c0657600080fd5b50565b600081519050610c1881610bf2565b92915050565b600081519050610c2d81610838565b92915050565b600080600080600060a08688031215610c4f57610c4e6106d0565b5b6000610c5d88828901610bd3565b9550506020610c6e88828901610c09565b9450506040610c7f88828901610c1e565b9350506060610c9088828901610c1e565b9250506080610ca188828901610bd3565b9150509295509295909350565b6000610cb982610be8565b9150610cc483610be8565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d0357610d0261090e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d4057610d3f61090e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d7d57610d7c61090e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dba57610db961090e565b5b82820290509291505056fea26469706673582212201e43ab842e2d3a1471138152d500850f8704c803fe12172c221c4acca413637764736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}